import { IOption } from 'ng-select';   // select option <option>

import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';
import { Router } from '@angular/router';
import { environment } from '../../../../../environments/environment';
import { AppService } from '../../../../app.service';
// Import BlockUI decorator & optional NgBlockUI type
import { BlockUI, NgBlockUI } from 'ng-block-ui';
// chỉnh css angular
import { ViewEncapsulation } from '@angular/core';
import 'rxjs/add/operator/map';
// import notification
import { NotifierService } from 'angular-notifier';
import { language } from '../../../../language';
import { language_en } from '../../../../language_en';

@Component({
  templateUrl: './add-question.component.html',
  styleUrls: ['./add-question.component.css'],
  // chỉnh css
  encapsulation: ViewEncapsulation.None
})

export class AddQuestionComponent implements OnInit {
  page_id = environment.Pages.admin.addquestion;
  @BlockUI() blockUI: NgBlockUI;
  private readonly notifier: NotifierService;
  language: any;
  type_language = JSON.parse(localStorage.getItem(environment.language));
  constructor(private router: Router,
    notifierService: NotifierService,
    private appservice: AppService) {
    this.type_language === 'vn' ? this.language = language : this.language = language_en;
    this.notifier = notifierService;
  }

  // Khai báo
  showdelete = true;
  hienkhung = true;
  dataexe: any = [];
  status = 1;
  data_list_question = [];
  organization_arr: Array<IOption>;
  org_selected: string;
  exam_question: any;     // dữ liệu câu hỏi mẫu
  exam_reason: any;       // dữ liệu lý do mẫu
  organization_id: number;
  viewby: number;
  id_question: number;
  exe: any;
  start_time = new Date();
  end_time = new Date();
  data_reasons: any;
  data_reasons1: any;
  actived = false;
  // data ảnh Form câu hỏi
  ImageUrl1: File = null; ImageUrl2: File = null; ImageUrl3: File = null; ImageUrl4: File = null;
  // data ảnh lý do Form
  ImageUrl_reason1: File = null; ImageUrl_reason2: File = null; ImageUrl_reason3: File = null;
  ImageUrl_reason4: File = null; ImageUrl_reason5: File = null; ImageUrl_reason6: File = null;
  ImageUrl_reason7: File = null; ImageUrl_reason8: File = null; ImageUrl_reason9: File = null;
  // ảnh chất lượng serve gửi về
  very_negative_img: string; negative_img: string; very_positive_img: string; positive_img: string;
  // tên  chất lượng
  very_negative: string; negative: string; very_positive: string; positive: string;
  campaign_name: string; question_name: string;
  // tên lý do
  reason_name1: string;
  reason_name2: string; reason_name3: string; reason_name4: string; reason_name5: string;
  reason_name6: string; reason_name7: string; reason_name8: string; reason_name9: string;
  // ảnh lý do serve gửi về
  reason_img1 = false;
  reason_img2 = false; reason_img3 = false; reason_img4 = false; reason_img5 = false;
  reason_img6 = false; reason_img7 = false; reason_img8 = false; reason_img9 = false;
  // actived lý do
  actived_reason1: string;
  actived_reason2: string; actived_reason3: string; actived_reason4: string; actived_reason5: string;
  actived_reason6: string; actived_reason7: string; actived_reason8: string; actived_reason9: string;
  // url ảng lý do
  ImageUrl_reasonl1: string; ImageUrl_reasonl2: string; ImageUrl_reasonl3: string;
  ImageUrl_reasonl4: string; ImageUrl_reasonl5: string; ImageUrl_reasonl6: string;
  ImageUrl_reasonl7: string; ImageUrl_reasonl8: string; ImageUrl_reasonl9: string;
  // url ảnh câu hỏi
  ImageUrll1: string; ImageUrll2: string; ImageUrll3: string; ImageUrll4: string;
  // active timeout
  actived_smile1 = false; actived_smile2 = false; actived_smile3 = false; actived_smile4 = false;
  actived_smile5 = false; actived_smile6 = false; actived_smile7 = false; actived_smile8 = false;
  actived_smile9 = false; actived_smile10 = false; actived_smile11 = false; actived_smile12 = false;
  checked = true;


  ngOnInit() {
    // load organization to or
    this.get_page_param();
    // data question exea
    this.id_question = 1;
    this.getdata();
    // lấy lis_question
    this.get_list_question();
  }
  // load organization
  get_page_param() {
    this.blockUI.start(this.language.dang_tai_cau_hinh);
    this.appservice.get_user_page_parametter(this.page_id).subscribe(
      param => {
        if (!environment.production) {
          console.log('get_page_param', param);
        }
        this.organization_arr = param.organization_arr;
        this.org_selected = String(param.organization_arr[0].value);
      },
      (error) => {
        if (!environment.production) {
          console.log(error);
        }
        this.blockUI.stop();
      },
      () => {
        this.blockUI.stop();
      }
    );
  }
  // lấy dữ liệu câu hỏi mẫu
  getdata() {
    const data = {
      id: this.id_question
    };
    if (!environment.production) {
      console.log('data', data);
    }
    this.blockUI.start(this.language.dang_tai_du_lieu);
    this.appservice.post(data, environment.FBA.ADMIN.get_question_edit).subscribe(
      param => {
        this.dataexe = param.get_question[0];
        if (!environment.production) {
          console.log('dữ liệu mẫu', this.dataexe);
        }
        // Lấy dữ liệu câu hỏi
        this.very_negative_img = param.get_question[0].very_negative_img;
        this.negative_img = param.get_question[0].negative_img;
        this.very_positive_img = param.get_question[0].very_positive_img;
        this.positive_img = param.get_question[0].positive_img;
        // Lấy dữ liệu lý do, smile touch
        for (let i = 0; i < 12; i++) {
          if (param.get_question[0].reasons[i]) {
            this['reason_img' + (i + 1)] = param.get_question[0].reasons[i].reason_img;
            this['actived_reason' + (i + 1)] = param.get_question[0].reasons[i].actived;
            this['reason_name' + (i + 1)] = param.get_question[0].reasons[i].reason_name;
          }
          if (param.get_question[0].smile_answer_touch_layout_arr[i]) {
            this['actived_smile' + (i + 1)] = param.get_question[0].smile_answer_touch_layout_arr[i].actived;
          }
        }
      },
      (error) => {
        if (!environment.production) {
          console.log(error);
        }
        this.blockUI.stop();
      },
      () => {
        this.blockUI.stop();
      }
    ); // get_user_page_parametter
  }
  // lấy list câu hỏi
  get_list_question() {
    const data = {
      organization_id: 6,
      viewby: 0,
      deleted: 2,
    };
    if (!environment.production) {
      console.log('data', data);
    }
    this.blockUI.start(this.language.dang_tai_du_lieu);
    this.appservice.post(data, environment.FBA.ADMIN.sp_ad_question).subscribe(
      param => {
        this.data_list_question = param.get_question;
        if (!environment.production) {
          console.log('sp_ad_question', this.data_list_question);
        }
      },
      (error) => {
        if (!environment.production) {
          console.log(error);
        }
        this.blockUI.stop();
      },
      () => {
        this.blockUI.stop();
      }
    ); // get_user_page_parametter
  }
  // upload ảnh chất lượng đánh giá
  uploadimagequality(file: FileList, number: Number) {
    const fileload = file[0];
    const reader = new FileReader();
    // hiện ảnh
    reader.onload = e => this['ImageUrll' + number] = reader.result;
    reader.readAsDataURL(fileload);
    // lên serve
    this['ImageUrl' + number] = file.item(0);
    if (!environment.production) {
      console.log(this['ImageUrl' + number]);
    }
  }
  // upload ảnh lý do bảng
  uploadimage_reason(file: FileList, number: Number) {
    const fileload = file[0];
    const reader = new FileReader();
    // hiện ảnh
    reader.onload = (event: any) => this['ImageUrl_reasonl' + number] = reader.result;
    reader.readAsDataURL(fileload);
    // lên serve
    this['ImageUrl_reason' + number] = file.item(0);
    if (!environment.production) {
      console.log(this['ImageUrl_reason' + number]);
    }
  }

  changequestion(event) {
    if (!environment.production) {
      console.log('a', event);
    }
    this.id_question = event;
    this.hienkhung = true;
    // Cho giá trị về lúc ban đầu
    for (let i = 0; i < 12; i++) {
      this['actived_reason' + (i + 1)] = false;
      this['reason_name' + (i + 1)] = '';
      this['reason_img' + (i + 1)] = '';
      this['actived_smile' + (i + 1)] = false;
    }
    this.getdata();
  }

  // suibmit form thêm data
  submitform(item) {
    this.blockUI.start(this.language.dang_xu_ly_du_lieu);
    if (!environment.production) {
      console.log('dữ liệu gửi đi', item.value);
    }
    const data: FormData = new FormData();
    if (this.ImageUrl1) { data.append('very_positive_img', this.ImageUrl1, this.ImageUrl1.name); }
    if (this.ImageUrl2) { data.append('positive_img', this.ImageUrl2, this.ImageUrl2.name); }
    if (this.ImageUrl3) { data.append('negative_img', this.ImageUrl3, this.ImageUrl3.name); }
    if (this.ImageUrl4) { data.append('very_negative_img', this.ImageUrl4, this.ImageUrl4.name); }

    for (let i = 1; i < 10; i++) {
      if (this['ImageUrl_reason' + i]) {
        data.append('reason_img' + i, this['ImageUrl_reason' + i], this['ImageUrl_reason' + i].name);
      }
    }
    data.append('data', JSON.stringify(item.value));
    data.append('token', environment.Bearer + ' ' + localStorage.getItem(environment.access_token));
    this.appservice.post(data, environment.FBA.ADMIN.insert_question).subscribe(
      para => {
        if (!environment.production) {
          console.log('dữ liệu gửi về', para);
        }
        if (para.status === 1) {
          this.notifier.notify('success', this.language.them_moi_thanh_cong);
          // this.router.navigate(['/fba/question/list-question']);
        } else {
          this.notifier.notify('error', this.language.co_loi_xay_ra);
        }
        // this.router.navigate(['/admin/admin']);
      },
      (error) => {
        if (!environment.production) {
          console.log(error);
        }
        this.blockUI.stop();
      },
      () => {
        this.blockUI.stop();
        // this.router.navigate(['/admin/admin']);
      });
  }
  // đổi số status cho tep by tep
  changetab(e) {
    this.status = e;
  }
  // checkbox ra form
  checkbox(id: number, event) {
    if (event.target.checked) {
      // this.contentEditable = true;
      // console.log(event.target.checked);
      this['marked' + id] = event.target.checked;
    } else {
      this['marked' + id] = false;
    }
  }
  // check number +
  checknumber(event: any) {
    const pattern = /[0-9\ ]/;
    const inputChar = String.fromCharCode(event.charCode);
    if (event.keyCode !== 8 && !pattern.test(inputChar)) {
      event.preventDefault();
    }
  }
}
