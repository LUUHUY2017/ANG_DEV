import { IOption } from 'ng-select';

import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';
import { Router } from '@angular/router';
import { environment } from '../../../../environments/environment';
import { AppService } from '../../../app.service';

// Import BlockUI decorator & optional NgBlockUI type
import { BlockUI, NgBlockUI } from 'ng-block-ui';

// highcharts
import Highcharts from 'highcharts';
import More from 'highcharts/highcharts-more';
import Tree from 'highcharts/modules/treemap';
import Heatmap from 'highcharts/modules/heatmap';
// chỉnh css angular
// import { ViewEncapsulation } from '@angular/core';
More(Highcharts);
Tree(Highcharts);
Heatmap(Highcharts);
// thêm mới dateranger
declare var $;
declare function intDateRangePicker_viewchild(start_date, end_date): any;
@Component({
  selector: 'app-age-metrics-comparison',
  templateUrl: './age-metrics-comparison.component.html',
  styleUrls: [
    './age-metrics-comparison.component.scss',
    './age-metrics-comparison.component.css'
  ],
  // chỉnh css angular
  // encapsulation: ViewEncapsulation.None
})
export class AgeMetricsComparisonComponent implements OnInit {
  page_id = '\'' + environment.Pages.age.metrics_gender + '\'';
  @BlockUI() blockUI: NgBlockUI;
  @ViewChild('container', { read: ElementRef }) container: ElementRef;
  @ViewChild('container2', { read: ElementRef }) container2: ElementRef;
  time_generate_report = new Date();

  // public navItems = navItems;
  public sidebarMinimized = true;
  private changes: MutationObserver;
  public element: HTMLElement = document.body;
  name_of_excel: any;

  // **** kết thúc phần hiển thị popup ******

  constructor(private router: Router, private appservice: AppService) {

    // thêm mới
    this.changes = new MutationObserver((mutations) => {
      this.sidebarMinimized = document.body.classList.contains('sidebar-minimized');
    });

    this.changes.observe(<Element>this.element, {
      attributes: true
    });
  }

  // Khai báo
  organization_id: number;
  snap_menu_tree: any;

  siteSelectionDisplay = false;
  siteSelectionDisplay2 = false;
  locationSelectionDisplay = false;
  start_date: any;
  end_date: any;
  site_id: number;
  style_start_date: any;
  style_end_date: any;

  startTimeOption: Array<IOption>;
  endTimeOption: Array<IOption>;
  startTime: string;
  endTime: string;

  time_period: string;
  title_time_period: string;
  time_period2: string;
  location: string;
  title_location: string;
  time_value: string;

  data: any;
  fba_time_period_overview: any;
  menu_tree: any;
  hidden_menu_location = false;
  indexOption: Array<IOption>;
  organization_arr_option: Array<IOption>;
  indexOptionSelected: string;
  has_site: number;
  /*----------  Giá trị mặc định  ----------*/
  viewDataBy: string;
  category_data = [];
  female = 0;
  male = 0;
  unknown = 0;
  total_gender = 0;
  url_api = environment.apiUrl + 'exports/';
  startt: string;
  endt: string;
  view: string;

  /*----------  ngOnInit  ----------*/
  ngOnInit() {
    const self = this;
    this.get_location_time();
    this.show_menu_location();
    intDateRangePicker_viewchild(Number(new Date()), Number(new Date()));
    $(function () {
      $('#endDateReportTemp').change(function () {
        self.date_ranger_event();
      });
    });
  }
  date_ranger_event() {
    this.time_value = null;
    this.start_date = (document.getElementById('startDateReportTemp') as HTMLInputElement).value;
    this.end_date = (document.getElementById('endDateReportTemp') as HTMLInputElement).value;
    const start_d = new Date(this.start_date.replace(/[']/g, ''));
    const end_d = new Date(this.end_date.replace(/[']/g, ''));
    this.time_period = this.appservice.convert_date_tostringdatemonth(start_d)
      + ' - ' + this.appservice.convert_date_tostringdatemonth(end_d);
    // console.log(this.start_date);
    // console.log(this.end_date);
  }
  get_location_time() {
    this.blockUI.start('Đang tải cấu hình...');
    this.appservice.get_user_page_parametter(this.page_id).subscribe(
      param => {
        this.organization_arr_option = param.organization_arr;
        this.fba_time_period_overview = param.fba_time_period_metrics;
        this.startTimeOption = param.start_time_list;
        this.endTimeOption = param.end_time_list;
        this.indexOption = param.fba_index;
        this.indexOptionSelected = this.indexOption[1].value;

        let para = null;
        if (param.user_page_parametter.length > 0 || !this.appservice.isEmptyObject(param.user_page_parametter)) {
          para = param.user_page_parametter;
          this.organization_id = para.organization_id;
          this.startTime = para.start_time;
          this.endTime = para.end_time;
          this.time_period = para.time_period;
          this.site_id = para.site_id;
          this.viewDataBy = para.view_by;
          if (para.time_value == null || para.time_value === '') {
            this.start_date = para.start_date;
            this.end_date = para.end_date;
          } else {
            this.get_time(para.time_value);
          }
          this.has_site = 1;
          // console.log('time_value', para.time_value);
        } else {
          /*----------  Xử lí thời gian   ----------*/
          this.organization_id = param.organization_arr[0].value;

          this.viewDataBy = 'Day';
          const time_on_now = new Date();
          this.start_date = '\'' + this.appservice.convert_date_tostringdate_by_nghia(time_on_now) + '\'';
          this.end_date = '\'' + this.appservice.convert_date_tostringdate_by_nghia(time_on_now) + '\'';
          this.time_period = 'Hôm nay';
          this.time_value = 'today';
          this.startTime = this.startTimeOption[0].value.toString();
          this.endTime = this.endTimeOption[22].value.toString();
        }
      },
      (error) => {
        if (!environment.production) {
          console.log(error);
        }
        this.blockUI.stop();
      },
      () => {
        this.blockUI.stop();
        this.get_sitetree();
      }
    );
  }

  // get_sitetree() {
  //   this.blockUI.start('Đang tải thông tin tổ chức');
  //   this.appservice.fba_get_org_tree(this.organization_id)
  //     .then(res => {
  //       if (!environment.production) {
  //         console.log('get_sitetree', res);
  //       }
  //       this.menu_tree = res;
  //       this.snap_menu_tree = res;
  //       if (this.has_site === 2 || this.has_site !== 1) {
  //         this.site_id = this.menu_tree[0].id;
  //         this.location = this.menu_tree[0].site_name;
  //       } else {
  //         this.location = this.menu_tree.filter(x => x.id === this.site_id)[0].site_name;
  //       }
  //       this.title_location = this.location;
  //       this.get_data();
  //     })
  //     .catch(() => {
  //       this.blockUI.stop();
  //     });
  // }
  get_sitetree() {
    this.blockUI.start('Đang tải thông tin tổ chức...');
    const url = environment.API.sites + '_get_site_for_report';
    const data = {
      organization_id: this.organization_id
    };
    this.appservice.post(data, url).subscribe(res => {
      if (!environment.production) {
        console.log('get_sitetree', res);
      }
      this.menu_tree = [];
      this.recusive_menu(res.site_array);
      this.snap_menu_tree = this.menu_tree.slice(0);
      if (this.has_site === 2 || this.has_site !== 1) {
        const first_array = this.menu_tree.find(item => Number(item.enables) === 1);
        this.site_id = first_array.id;
        this.location = first_array.site_name;
      } else {
        this.location = this.menu_tree.filter(x => x.id === this.site_id)[0].site_name;
      }
      this.title_location = this.location;
      this.blockUI.stop();
      this.get_data();
    }, (error) => {
      this.blockUI.stop();
    });
  }
  // Hàm đệ quy menu
  recusive_menu(array: any[], id = null, space = 0) {
    array.forEach(element => {
      if (element.parent_id === id) {
        const a_id = element.id;
        this.menu_tree.push({
          id: element.id
          , site_name: element.site_name
          , parent_id: element.parent_id
          , alevel: space
          , enables: element.enables
        });
        const scope = space + 1;
        this.recusive_menu(array, a_id, scope);
      }
    });
  }
  /*----------  Kích sự kiện thay đổi  ----------*/
  // hiện menu tổ chức theo user
  show_menu_location() {
    const userInfo = JSON.parse(localStorage.getItem(environment.UserLoged));
    if (!environment.production) {
      console.log('userInfo', userInfo);
    }
    if (userInfo.lever === '0') {
      this.hidden_menu_location = false;
    } else {
      this.hidden_menu_location = true;
    }
  }
  // thay đổi tổ chức
  changeorganization(event) {
    this.has_site = 2;
    this.organization_id = event.value;
    this.locationSelectionDisplay = false;
    this.get_sitetree();
  }
  // search menu
  search_menu(value: string) {
    // chuyển giá trị truyền vào về chữ thường để so sánh
    const string = value.toLowerCase();
    if (string === '') {
      this.menu_tree = this.snap_menu_tree;
    } else {
      this.menu_tree = this.snap_menu_tree.filter(x => x.site_name.toLowerCase().indexOf(string) !== -1);
    }
  }
  //  chọn địa điểm
  changeitem(organization_id, id, site_name) {
    this.site_id = id;
    this.location = site_name;
    this.siteSelectionDisplay = false;
  }
  // thay đổi tuần tháng năm thời kỳ
  chonthoigian(item) {
    this.time_period = item.label;
    const time = item.value;
    this.get_time(time);
  }
  get_time(time_value) {
    const ngayhomnay = new Date();
    if (time_value === 'yesterday') {
      const yesterday = new Date(ngayhomnay.getFullYear(), ngayhomnay.getMonth(), Number(ngayhomnay.getDate()) - 1);
      this.start_date = '\'' + this.appservice.convert_date_tostringdate_by_nghia(yesterday) + '\'';
      this.end_date = '\'' + this.appservice.convert_date_tostringdate_by_nghia(yesterday) + '\'';
      this.siteSelectionDisplay2 = false;
    } else if (time_value === 'last_week') {
      const beforeOneWeek = new Date(new Date().getTime() - 60 * 60 * 24 * 7 * 1000);
      const beforeOneWeek2 = new Date(beforeOneWeek);
      const day = beforeOneWeek.getDay();
      const diffToMonday = beforeOneWeek.getDate() - day + (day === 0 ? -6 : 1);
      const lastMonday = new Date(beforeOneWeek.setDate(diffToMonday));
      const lastSunday = new Date(beforeOneWeek2.setDate(diffToMonday + 6));
      this.start_date = '\'' + this.appservice.convert_date_tostringdate_by_nghia(lastMonday) + '\'';
      this.end_date = '\'' + this.appservice.convert_date_tostringdate_by_nghia(lastSunday) + '\'';
      this.siteSelectionDisplay2 = false;
    } else if (time_value === 'last_month') {
      const month_now = new Date(ngayhomnay.getFullYear(), ngayhomnay.getMonth(), 0);
      const yesterday = new Date(ngayhomnay.getFullYear(), Number(ngayhomnay.getMonth()) - 1, 1);
      this.start_date = '\'' + this.appservice.convert_date_tostringdate_by_nghia(yesterday) + '\'';
      this.end_date = '\'' + this.appservice.convert_date_tostringdate_by_nghia(month_now) + '\'';
      this.siteSelectionDisplay2 = false;
    } else if (time_value === 'last_year') {
      const ngaybatdaun = new Date(Number(ngayhomnay.getFullYear()) - 1, 0, 1);
      const ngayketthucn = new Date(Number(ngayhomnay.getFullYear()) - 1, 11, 31);
      this.start_date = '\'' + this.appservice.convert_date_tostringdate_by_nghia(ngaybatdaun) + '\'';
      this.end_date = '\'' + this.appservice.convert_date_tostringdate_by_nghia(ngayketthucn) + '\'';
      this.siteSelectionDisplay2 = false;
    } else if (time_value === 'today') {
      this.start_date = '\'' + this.appservice.convert_date_tostringdate_by_nghia(ngayhomnay) + '\'';
      this.end_date = '\'' + this.appservice.convert_date_tostringdate_by_nghia(ngayhomnay) + '\'';
      this.siteSelectionDisplay2 = false;
    } else if (time_value === 'this_week') {
      const currentWeekDay = ngayhomnay.getDay();
      const lessDays = currentWeekDay === 0 ? 6 : currentWeekDay - 1;
      const wkStart = new Date(new Date(ngayhomnay).setDate(ngayhomnay.getDate() - lessDays));
      const wkEnd = new Date(new Date(wkStart).setDate(wkStart.getDate() + 6));
      this.start_date = '\'' + this.appservice.convert_date_tostringdate_by_nghia(wkStart) + '\'';
      this.end_date = '\'' + this.appservice.convert_date_tostringdate_by_nghia(wkEnd) + '\'';
      this.siteSelectionDisplay2 = false;
    } else if (time_value === 'this_month') {
      const ngaydauthangnay = new Date(ngayhomnay.getFullYear(), ngayhomnay.getMonth(), 1);
      const ngaycuoithangnay = new Date(ngayhomnay.getFullYear(), ngayhomnay.getMonth() + 1, 0);
      this.start_date = '\'' + this.appservice.convert_date_tostringdate_by_nghia(ngaydauthangnay) + '\'';
      this.end_date = '\'' + this.appservice.convert_date_tostringdate_by_nghia(ngaycuoithangnay) + '\'';
      this.siteSelectionDisplay2 = false;
    } else if (time_value === 'last_fourteen_day') {
      const ngaybatdau = new Date(ngayhomnay.getFullYear(), ngayhomnay.getMonth(), Number(ngayhomnay.getDate()) - 14);
      const ngayketthuc = new Date(ngayhomnay.getFullYear(), ngayhomnay.getMonth(), Number(ngayhomnay.getDate()) - 1);
      this.start_date = '\'' + this.appservice.convert_date_tostringdate_by_nghia(ngaybatdau) + '\'';
      this.end_date = '\'' + this.appservice.convert_date_tostringdate_by_nghia(ngayketthuc) + '\'';
      this.siteSelectionDisplay2 = false;
    } else if (time_value === 'this_year') {
      const ngaybatdaun = new Date(ngayhomnay.getFullYear(), 0, 1);
      const ngayketthucn = new Date(ngayhomnay.getFullYear(), 11, 31);
      this.start_date = '\'' + this.appservice.convert_date_tostringdate_by_nghia(ngaybatdaun) + '\'';
      this.end_date = '\'' + this.appservice.convert_date_tostringdate_by_nghia(ngayketthucn) + '\'';
      this.siteSelectionDisplay2 = false;
    }
    this.time_value = time_value;
    if (!environment.production) {
      console.log('a', this.start_date);
      console.log('b', this.end_date);
    }
  }
  // thay đổi giờ, ngày, tuần  tháng năm trên thanh  block
  change_view() {
    // this.blockUI.start('Đang tải dữ liệu...');
    this.get_data();
  }
  // thay đổi nút áp dụng
  time_change() {
    this.blockUI.start('Đang tải dữ liệu...');
    this.get_data();
  }
  go_total_row_age(a1: number, a2: number, a3: number) {
    let tong = 0;
    tong = (Number(a1) + Number(a2) + Number(a3));
    return tong;
  }
  go_number(number, total) {
    let tong = 0;
    if (total !== 0) {
      tong = ((Number(number) / total) * 100);
      return tong.toFixed(2);
    }
    return tong;
  }
  get_data() {
    this.blockUI.start('Đang tải dữ liệu...');
    const data = {
      organization_id: this.organization_id
      , site_id: this.site_id
      , start_hour: '\'' + this.startTime + '\''
      , end_hour: '\'' + this.endTime + '\''
      , start_date: this.start_date
      , end_date: this.end_date
      , view_by: this.viewDataBy
    };
    if (!environment.production) {
      console.log('data', data);
    }
    this.time_generate_report = new Date();
    this.startt = this.startTimeOption.find(item => item.value === this.startTime).label;
    this.endt = this.endTimeOption.find(item => item.value === this.endTime).label;
    // tslint:disable-next-line:max-line-length
    this.view = this.viewDataBy === 'Day' ? 'Ngày' : this.viewDataBy === 'Week' ? 'Tuần' : this.viewDataBy === 'Month' ? 'Tháng' : this.viewDataBy === 'Year' ? 'Năm' : 'Giờ';

    const start_d = new Date(this.start_date.replace(/[']/g, '').replace(/[-]/g, '/'));
    const end_d = new Date(this.end_date.replace(/[']/g, '').replace(/[-]/g, '/'));
    this.style_start_date = this.appservice.convert_date_tostringdate_by_nghia(start_d, false);
    this.style_end_date = this.appservice.convert_date_tostringdate_by_nghia(end_d, false);
    this.title_location = this.location;
    if (this.time_value === null || this.time_value === '' || !this.time_value) {
      this.title_time_period = 'Ngày';
      this.time_period2 = this.time_period;
    } else {
      this.title_time_period = this.time_period;
      if (this.start_date === this.end_date) {
        this.time_period2 = this.style_start_date;
      } else {
        this.time_period2 = this.style_start_date + ' - ' + this.style_end_date;
      }
    }
    this.appservice.post(data, environment.GENDERAGE.API.sp_poc_gender_metrics_comparison).subscribe(
      res => {
        if (!environment.production) {
          console.log('res', res);
        }
        this.data = res;
        this.female = 0;
        this.male = 0;
        this.unknown = 0;
        this.total_gender = 0;
        res.forEach(element => {
          this.female += Number(element.female);
          this.male += Number(element.male);
          this.unknown += Number(element.unknown);
        });
        this.total_gender = Number(this.female + this.male + this.unknown);
        this.showchart();
        this.time_generate_report = new Date();
      },
      (error) => {
        if (!environment.production) {
          console.log(error);
        }
        this.blockUI.stop();
      },
      () => {
        this.blockUI.stop();
        const data_2 = {
          organization_id: this.organization_id
          , site_id: this.site_id
          , start_time: this.startTime
          , end_time: this.endTime
          , start_date: this.start_date
          , end_date: this.end_date
          , time_period: this.time_period
          , time_value: this.time_value
          , view_by: this.viewDataBy
        };
        this.appservice.save_user_page_parametter(this.page_id, JSON.stringify(data_2));
      }
    );
  }
  exportExcel(): void {
    const data = {
      organization_id: this.organization_id
      , site_id: this.site_id
      , start_hour: '\'' + this.startTime + '\''
      , end_hour: '\'' + this.endTime + '\''
      , start_date: this.start_date
      , end_date: this.end_date
      , view_by: this.viewDataBy
    };
    this.blockUI.start('Đang xuất báo cáo...');
    this.appservice.post(data, environment.GENDERAGE.API.sp_poc_gender_metrics_comparison + '_export_excel').subscribe(fileData => {
      window.open(this.url_api + fileData);
      this.name_of_excel = fileData;
      if (!environment.production) {
        console.log('Đã xuất file cả trong export laravel');
      }
    }, (error) => {
      this.blockUI.stop();
    },
      () => {
        this.blockUI.stop();
        const data2 = {
          name_of_excel: this.name_of_excel
        };
        const url = environment.FBA.API.export_metrics_analytic + '_delete_excel';
        this.appservice.post(data2, url).subscribe(res => {
          if (!environment.production) {
            console.log('Đã xóa file trong public export laravel');
          }
        });
      }
    );
  }
  showchart() {
    let i = 0;
    const chart_xAxis = [];
    this.data.forEach(element => {
      chart_xAxis[i] = element.time_period;
      i++;
    });
    if (!environment.production) {
      console.log('chart_xAxis', chart_xAxis);
    }
    /*----------  Phần trăm  ----------*/
    i = 0;
    const female = [];
    const male = [];
    const unknown = [];
    this.data.forEach(element => {
      female[i] = Number(element.female);
      male[i] = Number(element.male);
      unknown[i] = Number(element.unknown);
      i++;
    });
    if (!environment.production) {
      console.log('female/male/unknown:', female, male, unknown);
    }
    Highcharts.chart(this.container.nativeElement, {
      chart: { type: 'column' },
      title: { text: ' ' },
      subtitle: { text: ' ' },
      xAxis: { categories: chart_xAxis, crosshair: true },
      yAxis: { min: 0, allowDecimals: false, title: { text: '' } },
      // không cho phép lẻ
      tooltip: { backgroundColor: environment.POC.colors.backgroundColor, shared: true, distance: 80, padding: 10, },
      plotOptions: { bar: { dataLabels: { enabled: true } } },
      series: [
        {
          name: 'Nữ',
          data: female,
          color: environment.POC.colors.female,
          tooltip: { valueDecimals: 0, valuePrefix: '', valueSuffix: '' },
        }, {
          name: 'Nam',
          data: male,
          color: environment.POC.colors.male,
          tooltip: { valueDecimals: 0, valuePrefix: '', valueSuffix: '' },
        }, {
          name: 'Không xác định',
          data: unknown,
          color: environment.POC.colors.unknown,
          tooltip: { valueDecimals: 0, valuePrefix: '', valueSuffix: '' },
        }]
    });
  }
  reset_session() {
    const data = [];
    this.appservice.save_user_page_parametter_by_nghia(this.page_id, JSON.stringify(data)).subscribe(res => {
      this.get_location_time();
    });
  }
}
