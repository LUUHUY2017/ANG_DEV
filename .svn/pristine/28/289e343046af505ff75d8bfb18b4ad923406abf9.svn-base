import { IOption } from 'ng-select';   // select option <option>

import { Component, OnInit, ViewChild, ElementRef, TemplateRef } from '@angular/core';
import { Router } from '@angular/router';
import { environment } from '../../../../../environments/environment';
import { AppService } from '../../../../app.service';

// Import BlockUI decorator & optional NgBlockUI type
import { BlockUI, NgBlockUI } from 'ng-block-ui';

// chỉnh css angular
import { ViewEncapsulation } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import 'rxjs/add/operator/map';
// import Modal
import { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';
// import validate form
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
// import { PasswordValidation } from './user-form.validator';
// import viewchild
import { FootfallSettingMenuComponent } from '../../../viewchild/footfallsettingmenu/footfallsettingmenu.component';
import { FootfallViewPagemailComponent } from '../footfallviewpagemail/footfallviewpagemail.component';
import { FootfallViewUsermailComponent } from '../footfallviewusermail/footfallviewusermail.component';
import { NotifierService } from 'angular-notifier';

@ViewChild(FootfallSettingMenuComponent)

@Component({
  templateUrl: './footfallusermail.component.html',
  styleUrls: ['./footfallusermail.component.css'],
  // chỉnh css angular
  encapsulation: ViewEncapsulation.None
})

export class FootfallUserMailComponent implements OnInit {
  @ViewChild('dataTable') table: ElementRef;
  @BlockUI() blockUI: NgBlockUI;
  constructor(private router: Router,
    private route: ActivatedRoute,
    private appservice: AppService,
    private modalService: BsModalService,
    notifierService: NotifierService,
    private fb: FormBuilder) {
    this.notifier = notifierService;
    this.language = this.appservice.getLanguage();
  }
  private readonly notifier: NotifierService;
  // Khai báo kiểu dữ kiệu
  form: FormGroup;
  modalRef: BsModalRef;
  language: any;
  userinfo: any = JSON.parse(localStorage.getItem(environment.UserLoged));
  organization_arr: Array<any>;
  organization_id: String;
  componentStats: number;
  canLoadChildComponent: boolean;
  isSuperAdmin: boolean;
  defaultModule = '1';
  errorMess: string;
  isOnload: boolean;

  ngOnInit(): void {
    this.setDefaultValue();
    this.getConfig();
  }
  setDefaultValue() {
    this.isOnload = true;
    this.organization_arr = [];
    this.organization_id = null;
    const currentComponentStats = Number(localStorage.getItem('componentReportView'));
    console.log('currentComponentStats', currentComponentStats);
    if (currentComponentStats === 0) {
      this.componentStats = 1;
      localStorage.setItem('componentReportView', '1');
    } else {
      this.componentStats = currentComponentStats;
    }
    this.canLoadChildComponent = false;
    this.isSuperAdmin = false;
    this.errorMess = null;
  }
  changeComponent(id: number) {
    this.componentStats = id;
    localStorage.setItem('componentReportView', String(this.componentStats));
  }
  changeOrg(value: string) {
    console.log(this.organization_id);
  }
  // Lấy thông tin tổ chức lên ng-select
  getConfig() {
    this.blockUI.start(this.language.dang_tai_du_lieu);
    const url = environment.API.userGetOrg;
    this.appservice.get(url).subscribe(
      param => {
        console.log('get_user_page_parametter', param);
        if (param.status !== 1) {
          this.errorMess = this.language.da_co_loi_xay_ra;
          return;
        }
        const org = param.organization_arr.slice(0);
        this.organization_arr = org;
        this.isSuperAdmin = param.isSuperAdmin;
        this.organization_id = this.organization_arr[0].value;
        this.canLoadChildComponent = true;
        console.log('org', org);
      },
      (error) => {
        console.log(error);
        this.errorMess = this.language.khong_the_ket_noi_may_chu;
      }).add(() => {
        this.isOnload = false;
        this.blockUI.stop();
      });
  }
}
